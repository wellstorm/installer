<?xml version="1.0" encoding="iso-8859-1" standalone="yes" ?>

<!-- 
    A sample installation file.
    Use it as a base for your own installers :-)
    
    To compile it :
    - go in the bin directory where you installed IzPack
    - call "compile ../sample/install.xml -b ../sample"
-->

<installation version="1.0">


    <!-- 
        The info section.
        The meaning of the tags should be natural ...
    -->
    <info>
        <appname>Wellstorm WSP</appname>        
        <url>http://www.wellstorm.com</url>
	<appversion>2</appversion>
        <javaversion>1.5</javaversion>
        <requiresjdk>no</requiresjdk>
        <!--><pack200/>-->
        <run-privileged condition="izpack.windowsinstall.vista|izpack.windowsinstall.7"/ >	
    </info>

    <!-- 
        The gui preferences indication.
        Sets the installer window to 640x480. It will not be able to change the size.
    -->
    <guiprefs width="640" height="480" resizable="yes"/>
    
	<variables>
		<variable name="app-version" value="1.4"/>
		<variable name="released-on" value="10/03/2010"/>
		<!-- variable name="tanuki.dir" value="tanuki/wrapper-windows-x86-32-3.4.1"/-->
		<variable name="tanuki.dir" value="tanuki/wrapper-windows-x86-32-3.4.1-com"/>
		<!-- setting this to true will force the panel asking for the tanuki license location" -->
		<variable name="tanuki.standard.edition" value="false"/>
		<variable name="configure.witsrelay" value="false"/>
                <variable name="UNINSTALL_NAME" value="wsp"/>
		
	</variables>


    <!-- 
        The locale section.
        Asks here to include the English and French langpacks.
	    -->
    <locale>
        <langpack iso3="eng"/>        
    </locale>


    <!-- 
        The resources section.
        The ids must be these ones if you want to use the LicencePanel and/or the InfoPanel.
    -->
    <resources>
	
	<!-- res id="HTMLHelloPanel.info" src="welcome.html" /-->
	<!-- res id="HTMLInfoPanel.info" src="install-readme.html" /-->
       <res id="HTMLLicencePanel.licence" src="license.html" />       
        <!-- res id="installer.langsel.img" src="splash-3.10.png" /-->
	<res id="userInputSpec.xml" src="userInputSpec.xml" />
	<res  id="ProcessPanel.Spec.xml" src="ProcessPanel.Spec.xml" />
	<res id="Heading.image" src="logo.gif"/>
	
	<res id="TargetPanel.dir.windows" src="windir.txt"/>
	<res id="TargetPanel.dir.unix" src="linuxdir.txt"/>
         <res id="RegistrySpec.xml"          src="RegistrySpec.xml" />
    </resources>

    <!-- 
        The panels section.
        We indicate here which panels we want to use. The order will be respected.
    -->
    <panels>
        <panel classname="CheckedHelloPanel"  id="hellopanel"/>
        <!-- panel classname="HTMLInfoPanel" id="infopanel" encoding="ISO-8859-1"/-->
        <panel classname="HTMLLicencePanel" id="licensepanel"/>
        <panel classname="TargetPanel" id="targetpanel"/>
        <panel classname="PacksPanel" id="packspanel"/>
	<panel classname="UserInputPanel" id="userinputpanel.oracle"/>
	<panel classname="UserInputPanel" id="userinputpanel.jetty"/>	
	<panel classname="UserInputPanel" id="userinputpanel.jetty.keystore" condition="jetty.cond.show.keystorepanel"/>	
	<panel classname="UserInputPanel" id="userinputpanel.jvm" />	
	
	<panel classname="UserInputPanel" id="userinputpanel.tanuki" condition="tanuki.cond.show.licensepanel"/>	
		
	<!-- panel classname="UserInputPanel" id="userinputpanel.witsrelay"/-->	
        <panel classname="SummaryPanel" id="summarypanel"/>
	
        <panel classname="InstallPanel" id="installpanel"/>
	<panel classname="ProcessPanel"/>
        <panel classname="FinishPanel"  id="finishpanel"/>
    </panels>

<!-- The listeners section for CustomActions -->
    <listeners>
        <listener installer="SummaryLoggerInstallerListener"/>
	<!-- for windows we check the registry if product was already installed -->
	<listener installer="RegistryInstallerListener"
                  uninstaller="RegistryUninstallerListener">
            <os family="windows"/>
        </listener>

    </listeners>
<conditions>

    <condition type="variable" id="jetty.cond.show.keystorepanel">
      <name>jetty.check.keystorepanel</name>
      <value>true</value>
    </condition>

    <condition type="variable" id="tanuki.cond.show.licensepanel">
      <name>tanuki.standard.edition</name>
      <value>true</value>
    </condition>

    <condition type="variable" id="witsrelay.show.panel">
      <name>configure.witsrelay</name>
      <value>true</value>
    </condition>


   <condition type="variable" id="is32bit"> 
      <name>SYSTEM_sun_arch_data_model</name> 
      <value>32</value> 
   </condition> 
    

        <condition type="variable" id="uidwellbore.override.notset">
                <name>witsrelay.uidwellbore.override</name>
                <value/>
        </condition>


        <condition type="or" id="xpinstallation">
                <condition type="ref" refid="izpack.windowsinstall.xp"/>
                <condition type="ref" refid="izpack.windowsinstall.2003"/>
        </condition>

        <condition type="or" id="vistainstallation">
                <condition type="ref" refid="izpack.windowsinstall.vista"/>
                <condition type="ref" refid="izpack.windowsinstall.7"/>
        </condition>
     </conditions>
     
     <dynamicvariables>
		<!-- only set these if we don't show the keystore panel, these are effectively our defaults -->
		<variable name="jetty.ssl.keystore" value="./etc/keystore" condition="!jetty.cond.show.keystorepanel"/>
		<variable name="jetty.ssl.keystore.password" value="changeit" condition="!jetty.cond.show.keystorepanel"/>	
		
		<variable name="witsrelay.enable.uidwellbore.overide" value="" condition="!uidwellbore.override.notset"/>	
		<variable name="witsrelay.enable.uidwellbore.overide" value="#" condition="uidwellbore.override.notset"/>	

                <!-- the WSP service and jres for the respective architectures -->
		<variable name="winfolder" value="x64" condition="!is32bit"/>	
		<variable name="winfolder" value="win32" condition="is32bit"/>	


                <variable name="java.home" value="$INSTALL_PATH/jre6u20"/>
		<variable name="java.command" value="$INSTALL_PATH/jre6u20/bin/java" /> 
		<variable name="tanuki.wrapper.conf" value="$INSTALL_PATH/wsp/conf/wrapper.conf" /> 
		<variable name="tanuki.wrapper.license" value="$INSTALL_PATH/wsp/wrapper-license.conf" /> 
		<variable name="log4j.wsp.properties" value="$INSTALL_PATH/wsp/log4j.wsp.properties" /> 
		

  </dynamicvariables>
    <!-- 
        The packs section.
        We specify here our packs.
    -->
	<packs>

		<pack name="WSP" required="yes" override="true">
			<description>Wellstorm Witsml Service Platform</description>
			<fileset dir="" targetdir="$INSTALL_PATH">
				<include name="wsp/**"/>
				
				<exclude name="wsp/etc/wsp.properties/"/>
				<exclude name="wsp/etc/jetty.xml"/>
				<exclude name="wsp/etc/jetty-ssl.xml"/>
			</fileset>
			<!-- copy tanuki -->
                        <!-- 
			<singlefile src="${tanuki.dir}/bin/wrapper.exe" target="$INSTALL_PATH/wsp/wrapper.exe" condition= "izpack.windowsinstall" override="true" />
			<singlefile src="${tanuki.dir}/src/bin/App.bat.in" target="$INSTALL_PATH/wsp/WspApp.bat" condition= "izpack.windowsinstall" override="true"/>
			<singlefile src="${tanuki.dir}/src/bin/InstallApp-NT.bat.in" target="$INSTALL_PATH/wsp/InstallApp-NT.bat" condition= "izpack.windowsinstall" override="true"/>
			<singlefile src="${tanuki.dir}/src/bin/UninstallApp-NT.bat.in" target="$INSTALL_PATH/wsp/UninstallApp-NT.bat" condition= "izpack.windowsinstall" override="true"/>
                        -->
			<!-- rename template files -->
			<singlefile src="wsp/etc/_wsp.properties" target="$INSTALL_PATH/wsp/etc/wsp.properties" override="true"/>
			<singlefile src="wsp/etc/_jetty.xml" target="$INSTALL_PATH/wsp/etc/jetty.xml" override="true"/>
			<singlefile src="wsp/etc/_jetty-ssl.xml" target="$INSTALL_PATH/wsp/etc/jetty-ssl.xml" override="true"/>
			
                        <!-- 
			<file src="${tanuki.dir}/lib/wrapper.dll" targetdir="$INSTALL_PATH/wsp/wrapperlib" condition= "izpack.windowsinstall" override="true"/>
			<file src="${tanuki.dir}/lib/wrapper.jar" targetdir="$INSTALL_PATH/wsp/wrapperlib" condition= "izpack.windowsinstall" override="true"/>
			 <file src="${tanuki.dir}/lib/wrappertest.jar" targetdir="$INSTALL_PATH/wsp/wrapperlib" condition= "izpack.windowsinstall" override="true"/>
                         -->
			 <file src="../../wsp/log4j.wsp.properties" targetdir="$INSTALL_PATH/wsp" override="true"/>
                         
			 <file src="../../installer/start-wsp-service.bat" targetdir="$INSTALL_PATH/wsp" override="true"/>
			 
		<!-- condition= '"izpack.windowsinstall"/> -->
			
			<!-- we invoke this from ant and all files are relative to basedir buildroot/build/dist, but the jre is
			       is kept under the ../..i/nstaller/jre6u20 -->
			<fileset dir="../../installer" targetdir="$INSTALL_PATH" override="true" condition= "is32bit">
				<include name="win32/**"/>
			</fileset>

			<fileset dir="../../installer" targetdir="$INSTALL_PATH" override="true" condition= "!is32bit">
				<include name="x64/**"/>
			</fileset>

                        <!--
			<singlefile src="${tanuki.dir}/src/conf/wrapper.conf" target="$INSTALL_PATH/wsp/conf/wrapper.conf" condition= "izpack.windowsinstall"/>
                        -->
			<parsable targetfile="$INSTALL_PATH/wsp/etc/wsp.properties"  type="javaprop"/>
			<parsable targetfile="$INSTALL_PATH/wsp/etc/jetty.xml" type="xml" />
			<parsable targetfile="$INSTALL_PATH/wsp/etc/jetty-ssl.xml" type="xml" />
			<!--parsable targetfile="$INSTALL_PATH/wsp/conf/wrapper.conf" type="javaprop" condition= "izpack.windowsinstall"/-->
                        <!-- 
			<parsable targetfile="$INSTALL_PATH/wsp/conf/wrapper.conf" type="javaprop" />
                        -->
			<!-- 
                        <parsable targetfile="$INSTALL_PATH/wsp/WspApp.bat" type="plain" />
			<parsable targetfile="$INSTALL_PATH/wsp/InstallApp-NT.bat" type="plain" />
			<parsable targetfile="$INSTALL_PATH/wsp/UninstallApp-NT.bat" type="plain" />
			-->
			
			<executable targetfile="$INSTALL_PATH/${winfolder}/WSPService.exe" stage="uninstall">
				<os family="windows"/>
                                    <args>
                                        <arg value="\/u"/>
                                </args>
			</executable>
		</pack>
		<!--
		<pack name="WitsRelay" required="no" condition="witsrelay.show.panel">
			<description>Wellstorm Witsml Relay</description>
			<fileset dir="" targetdir="$INSTALL_PATH">
				<include name="witsrelay/**"/>
			</fileset>
			<parsable targetfile="$INSTALL_PATH/witsrelay/config/witsrelay.config"  type="javaprop"/>
		</pack>
		-->
	</packs>


            <native type="3rdparty" name="COIOSHelper.dll" stage="both">
                <os family="windows"/>
            </native>
</installation>
